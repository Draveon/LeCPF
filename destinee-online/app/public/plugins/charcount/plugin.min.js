/* Character Count plugin for TinyMCE – from code posted on Amy's Technotes: http://amystechnotes.com/2015/05/06/tinymce-add-character-count/ Minor changes: "charcount" instead of "customcharactercount" and "charactercount" – just to make it shorter Added code to check for maxlength attribute of control, and use that as limit Am counting *all* characters, instead of stripped (Amy's code removed the HTML from the count) In addition, this is in my stylesheet to get the text to line up with the path already in the statusbar. label.mce-charcount { margin: 4px 0 2px 2px; padding: 8px; } */ tinymce.PluginManager.add('charcount', function (editor) { var self = this; function update() { editor.theme.panel.find('#charcount').text(['Characters: {0} / {1}', self.getCount(), self.maxlength] ); if ( self.getCount() > self.maxlength ) { alert( "You need to edit this to make it less than (or equal to) " + self.maxlength+ " characters!" ); } } // end: update() editor.on('init', function () { var statusbar = editor.theme.panel && editor.theme.panel.find('#statusbar')[0]; var maxlength = $("#" + tinyMCE.activeEditor.id).attr("maxlength"); // apparently necessary for update: self.maxlength = maxlength; if (maxlength) { if (statusbar) { window.setTimeout(function () { statusbar.insert( { type: 'label', name: 'charcount', text: ['Characters: {0} / {1}', self.getCount(), self.maxlength], classes: 'charcount', disabled: editor.settings.readonly }, 0); // statusbar.insert editor.on('setcontent beforeaddundo', update); editor.on('keyup', function (e) { update(); }); // editor.on … }, 0); // window.setTimeout } // statusbar } // maxlength }); // end: editor.on('init … self.getCount = function () { var tx = editor.getContent({ format: 'raw' }); /* // original code stripped out HTML: var decoded = decodeHtml(tx); var decodedStripped = decoded.replace(/(<([^>]+)>)/ig, "").trim(); var tc = decodedStripped.length; //return tc; */ return tx.length; }; // end: getCount /* // unnecessary for my version of charcount, as we're not // worried about HTML function decodeHtml(html) { var txt = document.createElement("textarea"); txt.innerHTML = html; return txt.value; } */ });
